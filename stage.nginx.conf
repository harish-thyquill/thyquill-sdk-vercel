# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name _;  # Catch-all server block

    # Handle ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# Handle HTTPS traffic
server {
    listen 443 ssl;
    server_name _;  # Catch-all for dynamic domains

    # Default SSL certificate (fallback for unmatched domains)
    ssl_certificate /etc/letsencrypt/live/default/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/default/privkey.pem;

    # Dynamically match customer certificates
    ssl_certificate /etc/letsencrypt/live/$host/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;

    # HSTS (Enforce HTTPS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Serve Next.js App
    root /usr/share/nginx/html;
    location / {
        proxy_pass http://127.0.0.1:3000; # Forward to Next.js app
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        try_files $uri /index.html;
        add_header Referrer-Policy "no-referrer";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
    }

    # Cache static files like JS, CSS, images
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # Disable caching for API routes (if any)
    location /api/ {
        add_header Cache-Control "no-store";
    }

    # Custom error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Gzip compression to reduce file sizes
    gzip on;
    gzip_types text/css application/javascript image/svg+xml;
    gzip_min_length 256;
}
